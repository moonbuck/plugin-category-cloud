@import "vendor/rfs";

// Template for injecting rfs include directives into a Sass block.
{{ define "rfs-wrap" }}

  //Generate a slice with all the property names.
  {{ $edges := slice "top" "right" "bottom" "left" }}
  {{ $properties := 
    slice "font-size" "padding" "margin"
    | append (apply $edges "printf" "padding-%s" ".") 
    | append (apply $edges "printf" "margin-%s" ".") }}

  //Convert the slice for use within the regular expression.
  {{ $properties = delimit $properties "|" }}
  
  // Create the regular expression
  {{ $pattern := printf `(%s):\w*([^;]+)` $properties }}
  
  // Replace matches with the appropriate rfs include.
  {{ replaceRE $pattern `@include $1($2)` . }}
  
{{ end }}

{{ with (.Scratch.Get "plugin-category-cloud.Parameters") }}

$step-count: {{ div (sub .Style.MaxWeight .Style.MinWeight) 100 }};
$size-increment: {{ sub .Style.MaxSize .Style.MinSize }} / $step-count;

#{{ .Style.WrapperID }} { 
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-content: center;
  align-items: baseline;
  
  {{ with .Style.Wrapper }}{{ template "rfs-wrap" . }}{{ end }}
  
  a { 
    {{ with .Style.Link }}{{ template "rfs-wrap" . }}{{ end }}
    
    span {
      display: {{ cond .Style.DisplayPageCounts "initial" "none" }};
    }
    
    @for $i from 1 through $step-count {
      
      &.step-#{$i} {
        font-size: ({{ .Style.MinSize }} + $i * $size-increment)rem;
        font-weight: {{ .Style.MinWeight }} + $i * 100;
      }
      
    }
    
  }
  
}

{{ end }}